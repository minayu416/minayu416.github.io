3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-db013eb9512fa384.js"],""]
4:["routes","en/2023/12/blackduck-fortify-on-demand-api-research","c"]
0:["jlGCtbu7gB5EYr6DzUGMG",[[["",{"children":[["routes","en/2023/12/blackduck-fortify-on-demand-api-research","c"],{"children":["__PAGE__?{\"routes\":[\"en\",\"2023\",\"12\",\"blackduck-fortify-on-demand-api-research\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["routes","en/2023/12/blackduck-fortify-on-demand-api-research","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","$L6",null,{"src":"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js","strategy":"afterInteractive"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-EETGWC7GNV","strategy":"afterInteractive"}],["$","$L6",null,{"id":"ga4-init","strategy":"afterInteractive","children":"\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', 'G-EETGWC7GNV', {\n              page_path: window.location.pathname,\n            });\n          "}]]}],["$","body",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"https://minayu.site/_next/static/css/947d5ec7c9e084ed.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L7"]]]]]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[Back-end skill] How to use Black Duck and Fortify On Demand APIs? (with Python Requests and Postman - @Mina Influence"}],["$","meta","3",{"name":"description","content":"We have a lengthy security detection release flow and using Black Duck and Fortify On Demand to do scans for features. We want to research APIs of both scans and achieve automation."}],["$","meta","4",{"name":"application-name","content":"@Mina Influence"}],["$","meta","5",{"name":"author","content":"minayu416"}],["$","link","6",{"rel":"author","href":"https://minayu.site"}],["$","meta","7",{"name":"author","content":"@Mina Influence"}],["$","meta","8",{"name":"generator","content":"Next.js 14.2.5"}],["$","meta","9",{"name":"keywords","content":"Black Duck Scan APIs,Fortify On Demand Scan APIs,Python,Postman"}],["$","meta","10",{"name":"referrer","content":"origin-when-cross-origin"}],["$","meta","11",{"name":"creator","content":"minayu416"}],["$","meta","12",{"name":"publisher","content":"minayu416"}],["$","meta","13",{"name":"robots","content":"index, follow"}],["$","meta","14",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","15",{"rel":"canonical","href":"https://minayu.site/en/2023/12/blackduck-fortify-on-demand-api-research/"}],["$","link","16",{"rel":"alternate","hrefLang":"en","href":"https://minayu.site/en/2023/12/blackduck-fortify-on-demand-api-research/"}],["$","meta","17",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","18",{"property":"og:title","content":"[Back-end skill] How to use Black Duck and Fortify On Demand APIs? (with Python Requests and Postman"}],["$","meta","19",{"property":"og:description","content":"We have a lengthy security detection release flow and using Black Duck and Fortify On Demand to do scans for features. We want to research APIs of both scans and achieve automation."}],["$","meta","20",{"property":"og:url","content":"https://minayu.site/en/2023/12/blackduck-fortify-on-demand-api-research/"}],["$","meta","21",{"property":"og:site_name","content":"@Mina Influence"}],["$","meta","22",{"property":"og:locale","content":"en"}],["$","meta","23",{"property":"og:image","content":"https://minayu.site/static/img/cover-image.jpeg"}],["$","meta","24",{"property":"og:image:width","content":"1200"}],["$","meta","25",{"property":"og:image:height","content":"630"}],["$","meta","26",{"property":"og:type","content":"article"}],["$","meta","27",{"property":"article:published_time","content":"2023-12-06T09:01:20.000Z"}],["$","meta","28",{"property":"article:author","content":"Mina Yu"}],["$","meta","29",{"name":"twitter:card","content":"summary"}],["$","meta","30",{"name":"twitter:site:id","content":"@MingJungYU"}],["$","meta","31",{"name":"twitter:creator","content":"@MingJungYU"}],["$","meta","32",{"name":"twitter:title","content":"[Back-end skill] How to use Black Duck and Fortify On Demand APIs? (with Python Requests and Postman"}],["$","meta","33",{"name":"twitter:description","content":"We have a lengthy security detection release flow and using Black Duck and Fortify On Demand to do scans for features. We want to research APIs of both scans and achieve automation."}],["$","meta","34",{"name":"twitter:image","content":"https://minayu.site/static/img/cover-image.jpeg"}],["$","meta","35",{"name":"twitter:image:alt","content":"@Mina Influence Image"}],["$","link","36",{"rel":"shortcut icon","href":"/static/img/favicon.jpg"}],["$","link","37",{"rel":"icon","href":"/static/img/favicon.jpg"}],["$","link","38",{"rel":"apple-touch-icon","href":"/static/img/favicon.jpg"}],["$","meta","39",{"name":"next-size-adjust"}]]
1:null
8:I[619,["676","static/chunks/870fdd6f-d8d8a996639eb86b.js","168","static/chunks/168-06c8f4fac5ec5c0f.js","619","static/chunks/619-4671ee34442d690f.js","432","static/chunks/app/%5B...routes%5D/page-ab50a535e409addd.js"],"Navbar"]
9:T4563,<p>We have a lengthy security detection flow need to pass before each time we have new release to production, in the part of this flow, there are Black Duck and Fortify On Demand scans.</p>
<p>In this article, I would like to record the research of how to use the APIs of both scans to achieve our automation solution.</p>
<p>This research was conducted for <a href="/en/2023/12/design-innovative-solutions-on-automating-product-release-flow/">this automation solution</a>, if you have interest you can visit it, these 2 articles don't have dependency, so you can only read this article.</p>
<p><strong><em>Notice, we don't record all API endpoints here, only write the APIs which achieved our solutions, if you want to research more, please go to official Black Duck and Fortify On Demand document.</em></strong></p>
<p>When I was researching how to use both scans APIs, I found there were less reference and articles, so I hope this article can help you.</p>
<h2 id="table-of-content">Table of Content</h2>
<p>Here is like the table of content.</p>
<p>| Scan                  | Feature                         | Description                                                       | API                                                                                                                   |
| --------------------- | ------------------------------- | ----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |
| <strong>Fortify On Demand</strong> | Oauth Authentication            | Get authorized Oauth token for requesting other APIs              | https://api.ams.fortify.com/oauth/token                                                                               |
|                       | Get Application                 | Get all applications                                              | https://api.ams.fortify.com/api/v3/application                                                                        |
|                       | Get Release (with filter)       | Get all release or belongs to specific application with filter    | https://api.ams.fortify.com/api/v3/release æˆ– https://api.ams.fortify.com/api/v3/application/&#x3C;application_id>/release |
| <strong>Black Duck</strong>        | Authentication                  | Get authorized Bearer token for requesting other APIs             | https://&#x3C;host_name>/api/tokens/authenticate                                                                           |
|                       | Query project                   | Find specific projct (with filter)                                | https://&#x3C;host_name>/api/projects                                                                                      |
|                       | Get version                     | Get all version under specific project                            | https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions                                                                |
|                       | Generate Version Details Report | Generate Version Details Report with specific project and version | https://&#x3C;host_name>/api/versions/&#x3C;version_id>/reports                                                                 |
|                       | Download Version Details Report | Download report                                                   | https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/reports/&#x3C;report_id>/download                      |
|                       | Visit components with filter    | Filter specific condition with project components                 | https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/components                                        |</p>
<h2 id="fortify-on-demand-fod">Fortify On Demand (FoD)</h2>
<p>Fortify On Demand (FoD), it has the public <a href="https://api.ams.fortify.com/swagger/ui/index">official Swagger document</a>, offers many APIs and the convenient feature is using swagger to test the API endpoint, so if you get many Errors from response, you can try swagger UI first.</p>
<p>Here is the API Endpoints I want to introduce:</p>
<ul>
<li>Oauth Authentication: <code>https://api.ams.fortify.com/oauth/token</code></li>
<li>Get Application: <code>https://api.ams.fortify.com/api/v3/application</code></li>
<li>Get Release (with filter): <code>https://api.ams.fortify.com/api/v3/release</code> or <code>https://api.ams.fortify.com/api/v3/application/&#x3C;application_id>/release</code></li>
</ul>
<h3 id="oauth-authentication"><strong>Oauth Authentication</strong></h3>
<p>Before request other FoD APIs, you need to request this Oauth API for getting authorized token, then request other API with this returned token.</p>
<pre><code class="language-json">// POST https://api.ams.fortify.com/oauth/token
// Header
{
  "scope": "api-tenant", // visit setting to check scope
  "grant_type": "password",
  "username": "&#x3C;tenant>\\&#x3C;user_name>", // check tenant and user name in settings and make sure \ and \\.
  // Correct: &#x3C;tenant>\&#x3C;user_name>.
  "password": "&#x3C;personal_token>" // This is not fill your password, this fill the token you generate in FoD settings.
}
</code></pre>
<p>response</p>
<pre><code class="language-json">{
  "access_token": "ZGHJ3274JDK" // You will get authorized token, this is only example.
}
</code></pre>
<h3 id="get-application"><strong>Get Application</strong></h3>
<p>After you got authorized token, we can request other APIs with this token. First, get all application.</p>
<pre><code class="language-json">// GET https://api.ams.fortify.com/api/v3/application
// Header
{
  "Content-Type": "application/json",
  "Accept": "application/json",
  "Authorization": "Bearer &#x3C;token>" // With header, attach the token you got from Oauth response.
}
</code></pre>
<p>response</p>
<pre><code class="language-json">{
    ...,
    "items": [{
        "applicationName": "",
        "applicationId": "",
        ...
    }, {
        ...
    }
    ]
}
</code></pre>
<p>Through this API, you will get many Application, you can know the applicationName, applicationId and related information.</p>
<p>This API support filter, you can find the application you want, I will introduce it in next API, the usage of filter is similiar cross APIs.</p>
<h3 id="get-release-with-filter"><strong>Get Release (with filter)</strong></h3>
<p>You can pick to get release or release belongs with specific application, the second API, you need to bring applicationId.</p>
<pre><code class="language-json">// GET https://api.ams.fortify.com/api/v3/release or https://api.ams.fortify.com/api/v3/application/&#x3C;application_id>/release
// Header
{
    "Content-Type": "application/json",
    "Accept": "application/json",
    "Authorization": "Bearer &#x3C;token>", // With header, attach the token you got from Oauth response.
}

// Params -> Notice: this is Parameters, not Body, here is GET method, you need to put it in parameters. In Python, please put requests.get(params=&#x3C;params>). In postman, please put Params.
{
    "filter": "ReleaseName:&#x3C;service_name>" // Here is single filter example, if you have multiple condition, please use + connect with them. &#x3C;condition1>:&#x3C;value1>+&#x3C;condition2>:&#x3C;value2>
}

</code></pre>
<p>The format of filter is <code>&#x3C;filter field1>:&#x3C;filter value1>+&#x3C;filter field2>:&#x3C;filter value2></code>, so if I want to filter <code>ReleaseName</code> is <code>ppt-scanner</code> then I put</p>
<blockquote>
<p>"filter": "ReleaseName:ppt-scanner"</p>
</blockquote>
<p>The official document doesn't record detailed possible filter fields, you can observe the properties in API response and try filter with properties.</p>
<h2 id="black-duck-bd">Black Duck (BD)</h2>
<p>Black Duck scan (BD), the official document is private, you can go the the <code>?</code> -> <code>REST API Developer Guide</code> in the Black Duck service right top side panel, the document is very clear.</p>
<p>In this article, I will introduce the following API endpoint, please instead <code>host_name</code> to your server host name.</p>
<ul>
<li>Authentication: <code>https://&#x3C;host_name>/api/tokens/authenticate</code></li>
<li>Query project: <code>https://&#x3C;host_name>/api/projects</code></li>
<li>Get version: <code>https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions</code></li>
<li>Generate Version Details Report: <code>https://&#x3C;host_name>/api/versions/&#x3C;version_id>/reports</code></li>
<li>Download Version Details Report: <code>https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/reports/&#x3C;report_id>/download</code></li>
<li>Visit components with filter: <code>https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/components</code></li>
</ul>
<h3 id="authentication"><strong>Authentication</strong></h3>
<p>Similiar with above FoD scan, you need to request Authentication endpoint to get authorized Bearer token and use it for requesting other APIs.</p>
<pre><code class="language-json">// POST https://&#x3C;host_name>/api/tokens/authenticate
// Header
{
  "Accept": "application/vnd.blackducksoftware.user-4+json",
  "Authorization": "token &#x3C;personal_token>" // You can get the personal_token in Black Duck website -> the setting -> Access token -> generate personal token, if you need to generate report, you need to open the write permission.
  // Authorization value, please put "token" before your personal token, I stuck here much time. example: "Authorization": "token GH2395JKls=="
}
</code></pre>
<p>response</p>
<pre><code class="language-json">{
  "bearerToken": "ZGHJ3274JDK" // After requested, you get find the returned bearerToken if status 200.
}
</code></pre>
<h3 id="query-project"><strong>Query project</strong></h3>
<p>After we got the bearerToken, we can request other APIs. first. we want to get projects with filter (or just get all projects)</p>
<pre><code class="language-json">// GET https://&#x3C;host_name>/api/projects
// Header
{
    "Authorization": "Bearer &#x3C;bearerToken>", // Put the authorized bearerToken here.
}
// Params -> Yeah, its Parameters, this is GET method, so don;t put in body, doesn't work.
// If you need limit or filter with project, then you need this parameters.
{
    "limit": 5, // Only get 5 records
    "q": "name:&#x3C;filter_name>" // Yeah, filter key just a q, and put &#x3C;filter field>:&#x3C;filter value>, not sure filter with other properties, you can check properties in response.
}
</code></pre>
<p>response</p>
<pre><code class="language-json">{
    ...,
    "items": [{
        "name": "",
        "_meta": {
            "href": ""
        },
        ...
    }, {
        ...
    }
    ]
}
</code></pre>
<p>And I found, the project information in response doesn't include <code>project_id</code>, so I found <code>project_id</code> by split the url in <code>item[_meta][href]</code>, then <code>split("/")[-1]</code> split the href to get the last segment, it is <code>project_id</code>.</p>
<h3 id="get-version"><strong>Get version</strong></h3>
<p>After you got the project_id, now we would like to get all versions under this project.</p>
<pre><code class="language-json">// GET https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions
// Header
{
  "Authorization": "Bearer &#x3C;bearerToken>" // Put authorized BearerToken
}
</code></pre>
<p>Remember to put the project_id in request url.</p>
<p>response</p>
<pre><code class="language-json">{
    "items": [{
        "versionName": "master",
        ...,
        "_meta": {
            "href": ""
        },
    },
    {
        "versionName": "version_1",
        ...,
        "_meta": {
            "href": ""
        },
    }
    ]
}
</code></pre>
<p>Yeah, it doesn't return <code>version_id</code>, so we need to split by <code>item[_meta][href]</code> with <code>split("/")[-1]</code> to get <code>version_id</code></p>
<p>The _meta.href will like <code>https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id></code>, so split by "/" then get the last segment then you will get version_id.</p>
<h3 id="generate-version-details-report"><strong>Generate Version Details Report</strong></h3>
<p>So now we have <code>project_id</code> and <code>version_id</code>, we can generate Version Detail report based on it.</p>
<p>If you want to generate other type reports, please refer the official website.</p>
<pre><code class="language-json">// POST https://&#x3C;host_name>/api/versions/&#x3C;version_id>/reports
// Yes, we don't need to put project_id, its little weird.
// Header
{
    "Content-Type": "application/json",
    "Authorization": "Bearer &#x3C;bearerToken>", // Put the authorized bearerToken
}

// Body -> this is Body, because of the POST method.
{
    "reportFormat": "CSV", // here we put CSV, but there is JSON format can choose.
    "reportType": "VERSION",
    "caregories": ["VERSION", "COMPONENTS", "SECURITY", "PROJECT_VERSION_CUSTOM_FIELDS"] // You can check what categories you need when you generate reports in website then fill in here.
}
</code></pre>
<p>If you are not sure the part of categories, you can generate a report in website and open the <code>Developer Tool -> Network</code> then click generate, the developer tool will show the request and response, you can check the value of Header and Body in it.</p>
<p>response</p>
<pre><code class="language-json">{
    "links": {
        "download": {
            "url"
        }
    }
}
</code></pre>
<p>You can through <code>links</code> -> <code>download</code> -> <code>url</code> to get <code>report_id</code>.</p>
<p>And again, using split to get the last segment of url (<code>split("/")[-1]</code>), that is the <code>report_id</code></p>
<p>Maybe there are other ways to get <code>project_id, version_id and report_id</code>, but I didn't get it.</p>
<h3 id="download-version-details-report"><strong>Download Version Details Report</strong></h3>
<p>After generated report, it doesn't finish immediately, so if you write program to do automation, you can write while loop and pending 7-10 seconds. (It will finish at 30 seconds)</p>
<p>If the report haven't done, it will return HTTP status 412, but if raise other errors, it will also return 412, so need to check message in response.</p>
<p>Here is the request for downloading the report.</p>
<pre><code class="language-json">// GET https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/reports/&#x3C;report_id>/download
// Weird again, we don't need project_id to generate report, but need it when download report.
// Header
{
  "Authorization": "Bearer &#x3C;bearerToken>" // Put authorized bearerToken.
}
</code></pre>
<p>The response content is bytes, here is the python code to download it, in python 3.9.</p>
<pre><code class="language-py"># If download at local computer
import io
import zipfile

response = requests.get(url, headers=headers)
if response.status_code == 200:
    z = zipfile.ZipFile(io.BytesIO(response.content))
    z.extractall("./")

</code></pre>
<pre><code class="language-py"># If you want to save into AWS S3 bucket.
import io
import boto3
import zipfile

s3_client = boto3.client("s3")

s3_bucket = "&#x3C;bucket_name>"

response = requests.get(url, headers=headers)
if response.status_code == 200:
    z = zipfile.ZipFile(io.BytesIO(response.content))
    for file_info in z.infolist():
        file_name = file_info.filename

        # Read file content
        file_content = z.read(file_name)

        save_key = f"&#x3C;prefix>/{file_name}"

        # Upload content to S3
        s3_client.upload_fileobj(io.BytesIO(file_content), s3_bucket, save_key)

</code></pre>
<h3 id="visit-components-with-filter"><strong>Visit components with filter</strong></h3>
<p>The last one, I want to introduce visit components with specific <code>project_id</code> and <code>version_id</code>.</p>
<p>In this API, we can add many filters, but I only add one.</p>
<pre><code class="language-json">// GET https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/components
// Fill the project_id and version_id

// Header
{
    "Authorization": "Bearer &#x3C;bearerToken>", // Put bearerToken
}

// Params -> Parameters, because GET method, not Body.
{
    "limit": 10, // limit 10 or the number you can set.
    "filter": "bomPolicy:in_violation" // filter -> field_key: field_option
}

</code></pre>
<p>Here, I tried to get any In violation components.</p>
<p>response</p>
<pre><code class="language-json">// If there is not match in filter, it will return [] in items.
{
  "items": [
    {
      "componentName": "",
      "componentVersionName": ""
    },
    {
      "componentName": "",
      "componentVersionName": ""
    }
  ]
}
</code></pre>
<p>So, you can put filters in <code>Params</code> to filter components.</p>
<p>If you are not sure how to write filter content, you can visit the Black Duck website, enter the components page -> open Develoepr Tool -> Network, then you add any filter, you can see the Network catch the request and response, you can read the Parameters in Network.</p>
<p>Or get infromation in the url <code>https://&#x3C;host_name>/api/projects/&#x3C;project_id>/versions/&#x3C;version_id>/components?filter=bomPolicy:in_violation</code>, the filters information is after <code>?filter=</code> words and you can try in Params with Python or Postman.</p>
<p>Alright, these are the research and introduction of Fortify On Demand and Black Duck APIs.</p>
<p>Hope this help you and thanks for reading.</p>2:[["$","header",null,{"children":["$","div",null,{"className":"max-auto","children":["$","div",null,{"className":"mx-auto flex flex-wrap border-b border-solid","children":[["$","div",null,{"className":"lg:w-1/2 w-full lg: h-full object-cover object-center bg-cover","children":["$","div",null,{"className":"w-full h-full","children":["$","div",null,{"className":"relative overflow-hidden","children":[["$","img",null,{"className":"object-cover w-full brightness-75 h-[20rem]` md:h-[25rem]","src":"/static/img/blog-cover-image.jpg","alt":"Blog Cover Image"}],["$","div",null,{"children":[["$","$L8",null,{}],["$","div",null,{"className":"absolute px-2 py-2 site-branding h-[25rem]","children":[["$","div",null,{"className":"site-title","children":["$","p",null,{"children":["$","a",null,{"href":"/en","children":"@Mina Influence"}]}]}],["$","div",null,{"className":"site-description","children":["$","p",null,{"children":"Inspire you to have New thinking, Walk out your unique Road."}]}]]}]]}]]}]}]}],["$","div",null,{"className":"grid justify-items-center lg:w-1/2 w-full lg:h-auto lg:py-6 mt-6 lg:mt-0 hidden md:block","children":["$","div",null,{"className":"blog-branding-intro motto-block","children":["$","section",null,{"className":"text-gray-500 body-font","children":["$","div",null,{"className":"container px-6 mx-auto","children":["$","div",null,{"className":"w-full mx-auto text-center","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"currentColor","className":"inline-block w-6 h-6 text-gray-400 mb-4","viewBox":"0 0 975.036 975.036","children":["$","path",null,{"d":"M925.036 57.197h-304c-27.6 0-50 22.4-50 50v304c0 27.601 22.4 50 50 50h145.5c-1.9 79.601-20.4 143.3-55.4 191.2-27.6 37.8-69.399 69.1-125.3 93.8-25.7 11.3-36.8 41.7-24.8 67.101l36 76c11.6 24.399 40.3 35.1 65.1 24.399 66.2-28.6 122.101-64.8 167.7-108.8 55.601-53.7 93.7-114.3 114.3-181.9 20.601-67.6 30.9-159.8 30.9-276.8v-239c0-27.599-22.401-50-50-50zM106.036 913.497c65.4-28.5 121-64.699 166.9-108.6 56.1-53.7 94.4-114.1 115-181.2 20.6-67.1 30.899-159.6 30.899-277.5v-239c0-27.6-22.399-50-50-50h-304c-27.6 0-50 22.4-50 50v304c0 27.601 22.4 50 50 50h145.5c-1.9 79.601-20.4 143.3-55.4 191.2-27.6 37.8-69.4 69.1-125.3 93.8-25.7 11.3-36.8 41.7-24.8 67.101l35.9 75.8c11.601 24.399 40.501 35.2 65.301 24.399z"}]}],["$","p",null,{"className":"leading-relaxed","children":"Sometimes, you just meet some stories and invoked your inspiration, then later you use a totally different way, different concept to have a different life in the future."}],["$","span",null,{"className":"inline-block h-1 w-10 rounded bg-pink-500 mt-8 mb-6"}],["$","h2",null,{"className":"text-gray-900 font-medium title-font tracking-wider text-lg","children":"Sign @MinaYu."}]]}]}]}]}]}]]}]}]}],["$","section",null,{"className":"text-gray-600 body-font","children":["$","div",null,{"className":"container py-12 mx-auto","children":["$","div",null,{"className":"flex-wrap","children":["$","div",null,{"className":"p-2","children":["$","div",null,{"className":"mx-auto flex flex-wrap bg-white","children":[["$","div",null,{"className":"lg:w-2/3 w-full lg: h-full object-cover object-center bg-cover","children":["$","div",null,{"className":"px-4 mb-4","children":[["$","div",null,{"className":"mb-10 border border-solid py-4","children":[["$","p",null,{"className":"text-center tracking-widest text-md font-medium post-category font-fondamento","children":"IT Things and Development"}],["$","h3",null,{"className":"text-center tracking-widest text-md font-medium post-category font-fondamento","children":"it-things-and-development"}],["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md font-fondamento px-4 pt-2 pb-2","children":"[Back-end skill] How to use Black Duck and Fortify On Demand APIs? (with Python Requests and Postman"}],["$","p",null,{"className":"text-center test-gray italic tracking-wider font-mario","children":["Posted on ","Dec"," ",6,", ",2023]}]]}],["$","div",null,{"className":"flex-wrap","children":["",["$","article",null,{"className":"prose prose-slate prose-lg md:prose-base max-w-none break-words whitespace-pre-wrap [&_h1]:text-2xl [&_h1]:mb-0 [&_h2]:mb-0 [&_h2]:text-xl [&_p]:mt-2 [&_p]:mb-2 [&_li]:mt-1 [&_li]:mb-1 [&_li]:leading-snug [&_ul]:mt-0 [&_ul]:mb-0 [&_ul]:leading-none","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}]]}]]}]}],["$","div",null,{"className":"lg:w-1/3 w-full lg:h-auto lg: mt-6 lg:mt-0","children":["$","div",null,{"className":"px-4","children":[["$","div",null,{"children":[["$","div",null,{"className":"mb-10 border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"ABOUT ME"}]}],["$","div",null,{"className":"flex items-center justify-center","children":["$","img",null,{"className":"object-cover rounded-full","width":"175","height":"175","src":"/static/img/logo.jpg","alt":"Author Profile"}]}],["$","p",null,{"className":"leading-relaxed text-md text-center pt-3 pb-3 px-2 motto-block","children":"Hi, this is Mina, an ENTP type person always with innovative ideas. Cheerful, lively, also romantic. A software engineer, blogger, love to explore different cultures and build entrepreneurship. "}],["$","p",null,{"className":"leading-relaxed text-2xl text-center pt-1 pb-4 motto-block","children":"@MinaYu Signed"}],["$","div",null,{"className":"border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"BLOG STATS"}]}],["$","div",null,{"className":"my-5 pl-5 font-bold font-voll","children":[["$","span",null,{"id":"busuanzi_container_site_pv","children":["$","p",null,{"className":"pb-2","children":["Visits: ",["$","span",null,{"id":"busuanzi_value_site_pv"}]]}]}],["$","span",null,{"id":"busuanzi_container_site_uv","children":["$","p",null,{"children":["Visitors: ",["$","span",null,{"id":"busuanzi_value_site_uv"}]]}]}]]}]]}],["$","div",null,{"className":"mb-5 border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"CATEGORY"}]}],[["$","div","it-things-and-development",{"children":[["$","a",null,{"href":"/en/categories/it-things-and-development/","className":"blog-link-style","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["IT Things and Development"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",10,")"]}]]}]}],["$","div",null,{"className":"list-disc list-inside ml-4 text-gray-600","children":[["$","a","research-and-learning",{"className":"link-unstyled","href":"/en/categories/research-and-learning/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Research and Learning Note"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",6,")"]}]]}]}],["$","a","architecture-design-and-solution",{"className":"link-unstyled","href":"/en/categories/architecture-design-and-solution/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Architectural Design and Innovative Solutions"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",1,")"]}]]}]}],["$","a","miri",{"className":"link-unstyled","href":"/en/categories/miri/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Miri Robot Fortune Teller - Making Product Is Not Easy!"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",3,")"]}]]}]}]]}]]}],["$","div","espanol-posts",{"children":[["$","a",null,{"href":"/en/categories/espanol-posts/","className":"blog-link-style","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["EspaÃ±ol Posts"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",2,")"]}]]}]}],["$","div",null,{"className":"list-disc list-inside ml-4 text-gray-600","children":[["$","a","somos-familia",{"className":"link-unstyled","href":"/en/categories/somos-familia/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Novel - Somos familia"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",2,")"]}]]}]}]]}]]}]],["$","div",null,{"className":"mb-10 border border-solid py-4 mt-10","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"GALLERY"}]}]]}]}]]}]}]}]}]}],["$","footer",null,{"children":[["$","div",null,{"className":"bg-white border-t border-solid","children":["$","div",null,{"className":"container px-5 mx-auto","children":["$","div",null,{"className":"xl:w-1/2 lg:w-3/4 w-full mx-auto text-center","children":["$","div",null,{"className":"text-gray-600 text-center text-xl font-hand-writing tracking-wider py-8 px-2","children":"Hi, It's Mina Yu, a software engineer, blogger and polyglot learner. Since 7-9 years ago, my dream is designing my own personal website and now I did it, I changed the website name to @Mina Influence, want to encourage people by my influence. I will continue to achieve more my dream in the future. I just want to tell you, no matter your plan looks how hard and how unachievable, Once you begin to do it, everything will be changed."}]}]}]}],["$","div",null,{"className":"bg-cyan-50 border-t border-solid","children":["$","div",null,{"className":"text-gray-300 text-center text-md motto-block py-8 px-4","children":"Copy Right Â© 2024 @Mina Influence. Designed by MINA YU. Sign @MinaYu."}]}]]}]]
