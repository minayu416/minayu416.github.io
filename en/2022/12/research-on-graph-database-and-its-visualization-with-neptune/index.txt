3:I[9275,[],""]
5:I[1343,[],""]
6:I[4080,["185","static/chunks/app/layout-e216917d06a23d81.js"],""]
4:["routes","en/2022/12/research-on-graph-database-and-its-visualization-with-neptune","c"]
0:["UcnFbTdWzKm64fag4i-Pm",[[["",{"children":[["routes","en/2022/12/research-on-graph-database-and-its-visualization-with-neptune","c"],{"children":["__PAGE__?{\"routes\":[\"en\",\"2022\",\"12\",\"research-on-graph-database-and-its-visualization-with-neptune\"]}",{}]}]},"$undefined","$undefined",true],["",{"children":[["routes","en/2022/12/research-on-graph-database-and-its-visualization-with-neptune","c"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","$L6",null,{"src":"//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js","strategy":"afterInteractive"}],["$","$L6",null,{"src":"https://www.googletagmanager.com/gtag/js?id=G-EETGWC7GNV","strategy":"afterInteractive"}],["$","$L6",null,{"id":"ga4-init","strategy":"afterInteractive","children":"\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', 'G-EETGWC7GNV', {\n              page_path: window.location.pathname,\n            });\n          "}]]}],["$","body",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/b59247a0336e821b.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$L7"]]]]]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[Back-end Tech] Research on Amazon Neptune Database and Data Visualization - @Mina Influence"}],["$","meta","3",{"name":"description","content":"Graph DB, AWS Neptune and Data Visualization is the topic I collaborate with member from another team in our company's innovative idea research sprint, this will be a funny and innovative experience for me. I would like to extract part of our research note here."}],["$","meta","4",{"name":"application-name","content":"@Mina Influence"}],["$","meta","5",{"name":"author","content":"minayu416"}],["$","link","6",{"rel":"author","href":"https://minayu.site"}],["$","meta","7",{"name":"author","content":"@Mina Influence"}],["$","meta","8",{"name":"generator","content":"Next.js 14.2.5"}],["$","meta","9",{"name":"keywords","content":"Amazon Neptune,Graph Database,G.V(),Gremlin,Data Visualization"}],["$","meta","10",{"name":"referrer","content":"origin-when-cross-origin"}],["$","meta","11",{"name":"creator","content":"minayu416"}],["$","meta","12",{"name":"publisher","content":"minayu416"}],["$","meta","13",{"name":"robots","content":"index, follow"}],["$","meta","14",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","15",{"rel":"canonical","href":"https://minayu.site/en/2022/12/research-on-graph-database-and-its-visualization-with-neptune/"}],["$","link","16",{"rel":"alternate","hrefLang":"en","href":"https://minayu.site/en/2022/12/research-on-graph-database-and-its-visualization-with-neptune/"}],["$","meta","17",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","18",{"property":"og:title","content":"[Back-end Tech] Research on Amazon Neptune Database and Data Visualization"}],["$","meta","19",{"property":"og:description","content":"Graph DB, AWS Neptune and Data Visualization is the topic I collaborate with member from another team in our company's innovative idea research sprint, this will be a funny and innovative experience for me. I would like to extract part of our research note here."}],["$","meta","20",{"property":"og:url","content":"https://minayu.site/en/2022/12/research-on-graph-database-and-its-visualization-with-neptune/"}],["$","meta","21",{"property":"og:site_name","content":"@Mina Influence"}],["$","meta","22",{"property":"og:locale","content":"en"}],["$","meta","23",{"property":"og:image","content":"https://mingjungyu.files.wordpress.com/2022/12//screenshot-2022-12-16-at-8.56.44-pm.png"}],["$","meta","24",{"property":"og:image:width","content":"1200"}],["$","meta","25",{"property":"og:image:height","content":"630"}],["$","meta","26",{"property":"og:type","content":"article"}],["$","meta","27",{"property":"article:published_time","content":"2022-12-16T14:37:20.000Z"}],["$","meta","28",{"property":"article:author","content":"Mina Yu"}],["$","meta","29",{"name":"twitter:card","content":"summary"}],["$","meta","30",{"name":"twitter:site:id","content":"@MingJungYU"}],["$","meta","31",{"name":"twitter:creator","content":"@MingJungYU"}],["$","meta","32",{"name":"twitter:title","content":"[Back-end Tech] Research on Amazon Neptune Database and Data Visualization"}],["$","meta","33",{"name":"twitter:description","content":"Graph DB, AWS Neptune and Data Visualization is the topic I collaborate with member from another team in our company's innovative idea research sprint, this will be a funny and innovative experience for me. I would like to extract part of our research note here."}],["$","meta","34",{"name":"twitter:image","content":"https://mingjungyu.files.wordpress.com/2022/12//screenshot-2022-12-16-at-8.56.44-pm.png"}],["$","meta","35",{"name":"twitter:image:alt","content":"@Mina Influence Image"}],["$","link","36",{"rel":"shortcut icon","href":"/static/img/favicon.jpg"}],["$","link","37",{"rel":"icon","href":"/static/img/favicon.jpg"}],["$","link","38",{"rel":"apple-touch-icon","href":"/static/img/favicon.jpg"}],["$","meta","39",{"name":"next-size-adjust"}]]
1:null
8:I[619,["676","static/chunks/870fdd6f-d8d8a996639eb86b.js","168","static/chunks/168-06c8f4fac5ec5c0f.js","619","static/chunks/619-23933c150b335717.js","432","static/chunks/app/%5B...routes%5D/page-ab50a535e409addd.js"],"Navbar"]
9:T5de5,<p>Amazon Neptune Graph Database and Data Visualization is the topic we want to research in this cross-ream collaboration in our company.</p>
<h2>Introduction</h2>
<p>We have a special scrum sprint called Innovative Idea Research every 3 months in our company, in this sprint, software engineers can choose the topics they have interesting to do research and show the result in last demo day.</p>
<p>The company proposed the new rule allows us can collaborate with members from other team on same research for improving the cross-team communication and increase the research diversity.</p>
<p>I saw many different cards on the board and there is a interesting name on one card.</p>
<blockquote>
<p>Neptune this name looks very cool, then "Visualization" might represent there will be some front-end skill included. I learned front-end since this year April and have some interesting with it.</p>
</blockquote>
<p>So I filled my name on the card, then we begin the collaboration with 1 member from another team and 1 member in same team but haven't had collaboration before.</p>
<p>I like this experience, it look like I leave the comfortable zone, and have more new experience with cross-team collaboration and new technology. I would like to extract some content from our original research note to here.</p>
<h2>Objective</h2>
<p>Our research topic is <code>Research on Amazon Neptune and Data Visualization</code>.</p>
<p>This AWS service has been used for long while in the member who from another team, but me and my team member, we have 0 experience for it, and we need to learn even graph database and both AWS Neptune service in 2-3 weeks.</p>
<p>The table of content as following:</p>
<ul>
<li>Learn Basic Knowledge of Graph Database
<ul>
<li>NoSQL</li>
<li>Nodes, Edges, Label, Properties</li>
<li>Query Language: Gremlin</li>
<li>Relational Database(RDB) VS Graph Database(Graph DB)</li>
</ul>
</li>
<li>Implementation Part
<ul>
<li>Create Amazon Neptune Database + Jupyter Notebook</li>
<li>Use Gremlin to do simple query</li>
<li>Data Visualization
<ul>
<li>aws/graph-notebook</li>
<li>G.V()</li>
<li>Gremlify</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Are you ready?</p>
<h2>Basic Knowledge</h2>
<p>The following concepts can help you roughly understand Graph Database.</p>
<ul>
<li>NoSQL</li>
<li>Nodes, Edges, Label, Properties</li>
<li>Query Language</li>
<li>Relational Database(RDB) VS Graph Database(Graph DB)</li>
</ul>
<h3>NOSQL</h3>
<p>Graph Database is a NoSQL database, unlike relational database, such as MySQL, PostgreSQL, SQLite, they are different and not each service suit the Relational Database(RDBMS).</p>
<p>|       | Type           | Example           |
| ----- | -------------- | ----------------- |
| NoSQL | Key-Value      | Redis             |
|       | Document-based | MongoDB           |
|       | Column-based   | BigTable          |
|       | Graph-based    | Neptune, Neo4j    |
| RDBMS | Table-based    | MySQL, PostgreSQL |</p>
<p>Through the above table, we can know the Graph DB is one of NoSQL DB.</p>
<h3>Nodes, Edges, Label and Property</h3>
<p>Then we introduce the concepts of how Graph DB save data. If the nouns in RDB are Table, Column, Primery Key and Foreign Key，then in Graph DB there are Nodes, Edges, Label 和 Property.</p>
<p>| Object     | Description                                                                                                                                                                                                                                                                                 |
| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Nodes      | Represent entities like company, people, account, this is roughly the equivalent of a record or row in relational database.                                                                                                                                                                 |
| Edges      | Like the relationship or connection between nodes, this is the key concept in graph database.                                                                                                                                                                                               |
| Label      | Attribute that group similar nodes together, for example different company nodes belong to <strong>Label Company</strong>, like Google, Tesla, Apple, they are different <strong>Nodes</strong> but belong to <strong>Label called Company</strong>. so you can use like <strong><em>g.V().hasLabel("Company")</em></strong> to get all company Nodes. |
| Properties | Such as the properties which nodes or edges have, for example, if one company is a node, there might have employees count, founded date or location properties. Also, you can add property in Edge.                                                                                         |</p>
<p>Graph Database is more suitable for the data have highly complicated relationship.</p>
<h3>Query Langauge: Gremlin</h3>
<p>The relation of Query language and Database like SQL and MySQL. In Graph DB, there are many query language, like Gremlin, Cypher, GQL, SPARQL, PGQL, GraphQL.</p>
<p>Sample:</p>
<p>| Query Language | Statement                  |
| -------------- | -------------------------- |
| SQL            | SELECT * FROM table_name  |
| Gremlin        | g.V().hasLabel(label_name) |</p>
<p>In this research, we learn Gremlin and use it on AWS Neptune and Jupyter Notebook.</p>
<p>The following is the Cheat Sheet</p>
<pre><code class="language-Gremlin">%%Gremlin

// list all Nodes
g.V()

// list Nodes with limit 25 records
g.V().limit(25)

// list all Edges
g.E()

// list all Nodes and its value
g.V().valueMap()

// list all Nodes with its ID and its value
g.V().valueMap(true)

// list all Edges and its value
g.E().valueMap(true)

// Delete all Nodes &#x3C;-- This dangerous query must teach haha, careful to use.
g.V().drop().iterate()

// Delete all Edges
g.E().drop().iterate()

// Add one Node
g.V().add("Company")

// Add one Node and its Property
g.V().add("Company").property(id, "COM-0001").property("name", "Innova").as("COM-0001")
g.V().add("Employee").property(id, "EMP-0001").property("name", "Mina").as("EMP-0001")

// Add Edge and Property (fill with Node Id)/and addE(the name of relationship): connect employee -> company
g.V("EMP-0001").addE("belong").to(__.V("COM-0001")).property("checkIn", "2022-02-14")

// Add data continuously: only the last query don't need to put next()
g.V().add("Company").property(id, "COM-0001").property("name", "Innova").as("COM-0001").next()
g.V().add("Company").property(id, "COM-0002").property("name", "Google").as("COM-0002").next()
g.V().add("Company").property(id, "COM-0003").property("name", "Tesla").as("COM-0003")

// Query same Label Node
g.V().hasLabel("Company")

// Query specific ID Node/Edge
g.V("COM-0001")
g.E("&#x3C;id>")

</code></pre>
<p>More can refer other articles.</p>
<h3>Relational Database(RDB) VS Graph Database(Graph DB)</h3>
<p>|               | Graph DataBase                                                                                                                                                                                                                                                                                                                                                                      | Relational Database                                                                                                                                                                                                             |
| ------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Format        | Nodes, Edges                                                                                                                                                                                                                                                                                                                                                                        | Tables with Rows and Columns                                                                                                                                                                                                    |
| Relationship  | Considered data, represented by edges between nodes                                                                                                                                                                                                                                                                                                                                 | Related across tables, established using foreign keys between tables.                                                                                                                                                           |
| Complex Query | Run quickly and do not require joins                                                                                                                                                                                                                                                                                                                                                | Require complex joins between tables                                                                                                                                                                                            |
| Top Use Case  | Relationship-heavy use cases, including fraud detection and recommendation engines. Highly-connected data that comes with an intrinsic need for relationship analysis. Data model is inconsistent and demands frequent changes.                                                                                                                 | Transaction-focused use cases, including online transactions and accounting.                                                                                                                                  |
| Example       | <img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-14-at-11.14.47-am.png" alt="">                                                                                                                                                                                                                                                                                        | <img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-14-at-11.15.00-am.png" alt="">                                                                                                                                    |
| Pros          | Addtional attribute could be added at some point. Not all entities will have all the attribute in the table. The attribute types are not strictly defined.                                                                                                                                                                                      | it is faster when handling huge numbers of records because the structure of the data is known ahead of time. Relational database in tables with rows and columns and uses <code>JOIN</code> for fast querying.  |
| Cons          | Run frequent table scans and searches for data that fits defined categories. When you have a known key and need to retrieve the data associated with it, a graph database is not particularly useful. If the entities in your model have very large attributes like BLOBs, CLOBs, long texts... then graph databases aren't the best solution.  | Relational databases are slower for large datasets. Relational database has poor performance for deep analytics.                                                                                     |</p>
<p>Reference: https://www.techtarget.com/searchdatamanagement/feature/Graph-database-vs-relational-database-Key-differences</p>
<h2>Implementation Part</h2>
<p>After learn concepts, we need to do some exercise, there will be 3 parts inside:</p>
<ul>
<li>Create Amazon Neptune Database + Jupyter Notebook</li>
<li>Use Gremlin to operate data</li>
<li>Data Visualization</li>
</ul>
<p>That's GO!</p>
<h3>Create Amazon Neptune Database + Jupyter Notebook</h3>
<p>I'm not sure everyone want to use Amazon Neptune Database, because for me,</p>
<blockquote>
<p>It is little expensive :)</p>
</blockquote>
<p>At begining, I think I created a new AWS account and use the Free Tier Plan will not be charged, but I still be charged 40 USD in 2 months (acutaully I played it 2 weeks, but cross November and December.).</p>
<p>So weird, in second time, I only created Neptune Database, I haven't use it in few mins and I got charged again haha.</p>
<p>(40 USD in my country is expensive.)</p>
<p>I use the AWS console to create Neptune, not the AWS CLI, not the Terraform. So that's do it.</p>
<p>Enter your cute Amazon Dashoboard and type Neptune on Search Bar for entering Neptune.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-9.51.12-pm.png" alt=""></p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-9.51.39-pm.png" alt=""></p>
<p>Click three dots at the left side.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-9.53.20-pm.png" alt=""></p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-9.53.30-pm.png" alt=""></p>
<p>Click Database and click Create database.</p>
<p>In the setting part, be careful the Free Plan in AWS Neptune is the Engine options <code>Provisioned</code> + <code>db.t3.medium</code></p>
<p>Please check your region, make sure your region supports Neptune instance.</p>
<p>If you got Failed, please check in CloudWatch.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/image.png" alt=""></p>
<p>If you got same error, it might represent your region doesn't support the instance <code>db.t3.medium</code> , we can created DB in region <code>us-east-1</code>。</p>
<p>In Create database setting, <code>Engine options</code> please choose <code>Provisioned</code>, I tried <code>Serverless</code>, it is not belong to Free Plan scope.</p>
<p><code>Templates</code> choose <code>Development and Testing</code>，<code>DB instance size</code> choose <code>Buerstable classes</code>: <code>db.t3.medium</code>。</p>
<p><code>Connectivity</code> is more complex part, it has permission problem and need to research the VPC part, I use the root user, so I have all permission, I suggest to call the helping from the MIS or DevOps, help to create Neptune Database directly.</p>
<p><code>Notebook configuration</code>，We need Jupyter Notebook to connect to Neptune and query data with it. so turn on the Create notebook.</p>
<p>After created, it will take some time to create DB and Notebook, you can check jupyter Notebook in Notebook section.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-10.12.15-pm.png" alt="">
<img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-15-at-10.12.24-pm.png" alt=""></p>
<p>Why the screenshot I provided is serverless? Because I told my company that I use my account to do research and be charged xD, they provide this Neptune for me to playing, so the Operator help me to create the Neptune directly, because I don't have permission.</p>
<blockquote>
<p>Remember stop the DB and Notebook when you don't use them.</p>
</blockquote>
<h3>Use Gremlin to do simple operation</h3>
<p>Next step, please open the Notebook，we will use Gremlin to put some data.</p>
<p>First, that us check the database.</p>
<pre><code>// Remember put this in AWS Jupyter Notebook, mark the next query need to use Gremlin to run
%%gremlin

// list all Nodes
g.V()
</code></pre>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.16.24-pm.png" alt=""></p>
<p>Because I have put some data inside it, or the database should empty if just created.</p>
<p>That's add some data, we add 2 Nodes.</p>
<pre><code>%%gremlin

g.addV("People").
     property(id,"PPL-0001").
     property("name","Amy").
     property("age",29).
     property("gender","F",).
     property("job","Engineer").
     as("PPL-0001").next()

g.addV("People").
     property(id,"PPL-0002").
     property("name","Jason").
     property("age", 31).
     property("gender","M",).
     property("job","Salesmen").
     as("PPL-0002")

</code></pre>
<p>Now, we have 2 Nodes (2 People) belong to Label People, there are Properties id, name, gender and job, Amy and Jason.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.29.25-pm.png" alt=""></p>
<p>Then use <code>g.V()</code> to lise all Node, you can see the id PPL-0001 and PPL-0002 are the Nodes we just inserted.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.29.47-pm.png" alt=""></p>
<p>Then if you want to see the properties.</p>
<pre><code>g.V().valueMap(true)
</code></pre>
<p>List all Nodes and its properties.</p>
<p>Then, we are gonna to add spme relationship by using Edge.</p>
<p>I want to present that Amy lile Jason since 2022/8</p>
<pre><code>%%gremlin

// PPL-0001 Amy add one Edge like -> PPL-0002 Jason
g.V('PPL-0001').addE('like').to(__.V('PPL-0002'))

</code></pre>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.31.13-pm.png" alt=""></p>
<p>We can see the Edge now.</p>
<p>So now we have 2 Nodes and 1 Edge.</p>
<ul>
<li>PPL-0001</li>
<li>PPL-0002</li>
<li>PPL-0001-like->PPL-0002</li>
</ul>
<p>But now each data present by words, it's hard to see, so now we are gonna to introduce Data Visualization.</p>
<h3>Data Visualization</h3>
<p>In our research, we took the research on three methods for Data Visualization of Graph Database, 2 of them are tools and not really need to install DB, so if you want to play Graph DB and Gremlin, here will introduce 2 methods.</p>
<ul>
<li><a href="https://github.com/aws/graph-notebook">aws/graph-notebook</a></li>
<li><a href="https://gdotv.com/">G.V()</a></li>
<li><a href="https://gremlify.com/">Gremlify</a></li>
</ul>
<h4>aws/graph-notebook</h4>
<p><a href="https://github.com/aws/graph-notebook">aws/graph-notebook</a> is a Python Package used in Jupyter Notebook, we use this in our implementation part. It has been included in Jupyter Notebook when created.</p>
<p>We researched one query sentence can show the data by graph.</p>
<pre><code>%%gremlin -p v,ine,outv,oute,inv
g.V().or(hasLabel("&#x3C;Label1>"), hasLabel("&#x3C;Label2>"))
     .inE().outV()
     .outE().inV().path().by(valueMap(true))

</code></pre>
<p>Use this query and then fill up the Label data you want to show, you can touch it.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.32.25-pm.png" alt=""></p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.32.39-pm.png" alt=""></p>
<p>So, this is the data we just inserted, you can see the properties by press the three line icon.</p>
<p>If you want to find key words in any Nodes or Edges, you can use the search bar, like the screenshot showed.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.33.09-pm.png" alt=""></p>
<p>About the data visualization, I didn't put many data in the above description, so can not show more, let me show some mock data in our research, these all are mock data, will not involve our company.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.34.26-pm.png" alt=""></p>
<p>We use same query but with different Label name which the data I have inserted before.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.34.39-pm.png" alt=""></p>
<p>Well, I think the naming of Edges is not good, it looks little mess haha.</p>
<p>Use search bar to search key words will show the related Nodes and Edges.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.36.02-pm.png" alt=""></p>
<p>So that's all the content about using <code>aws/graph-notebook</code>.</p>
<h4>G.V()</h4>
<p>That's introduce <a href="https://gdotv.com/">G.V()</a> which provided by AWS, <a href="https://docs.aws.amazon.com/neptune/latest/userguide/notebooks-visualization-tools.html">the third-party software</a> to realize the data visualization.</p>
<p><img src="https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.49.43-pm.png" alt=""></p>
<p>It is downloaded to the local in computer and includes the version Windows/Mac/Linux.</p>
<p>This software likes the MySQL WorkBrach, it allows we create a playground without any connection with any DB and then we can play Gremlin and GraphDB inside this playground.</p>
<p>There is always a button can show the graph when you do query, so it is very easy and convenient.</p>
<p>However, we stopped the research, because of the following reasons:</p>
<ul>
<li>If we want to connect to DB, it needs Pro version, which means we need to pay, we don't have budget to buy, and we would like to connect Neptune originally not only play win playground feature.</li>
<li>I found after addE, the existing all Nodes will disappear, I'm not sure the bugs, this will increase more resarch time, due to the time limitation, we stopped the research.
</li>
</ul>
<h4>Gremlify</h4>
<p>The finall tool is website, don't need to install and it is free, if you don't have requirement to install DB and just want to try, you can use this. -> <a href="https://gremlify.com/">Gremlify</a>，I haven't use it, but I saw our another member showed this, and seems very convenient.</p>
<p>I don't have screenshot can show, this website allows you use mouse to create Node and Edge directly and not need to write query sentence, I think this is more convenient, and it also have visualization graph when you do query.</p>
<p>If anyone use it and feel good, please leave comment to me, thankt you!</p>
<p>Alright, that's all the research note of our cross-team collaboration Innovative Idea Research. This time I collaborate with 1 member from another team and 1 member who is same team with me but neven collaborate before (she is QE, and we run pair programming), and this technology is totally new for us, this is a very good experience for me, so I would like to write it down.</p>
<p>Espicially when collaborating, we know the member from another team will leave company after 1 month, this will be the first time and also final time we have collaboration, we should hold this opptunity to perform well, to do great job and create good memory and present good result in final.</p>
<p>This is my first time to write English article after a long while, I believe my English improved a lot since I'm working in a Indian company located in Taiwan and having American business collaboration teams.</p>
<p>If you like or if there are some question/some errors in this article, please leave comment or send mail to me, thanks :).</p>
2:[["$","header",null,{"children":["$","div",null,{"className":"max-auto","children":["$","div",null,{"className":"mx-auto flex flex-wrap border-b border-solid","children":[["$","div",null,{"className":"lg:w-1/2 w-full lg: h-full object-cover object-center bg-cover","children":["$","div",null,{"className":"w-full h-full","children":["$","div",null,{"className":"relative overflow-hidden","children":[["$","img",null,{"className":"object-cover w-full brightness-75 h-[20rem]` md:h-[25rem]","src":"/static/img/blog-cover-image.jpg","alt":"Blog Cover Image"}],["$","div",null,{"children":[["$","$L8",null,{}],["$","div",null,{"className":"absolute px-2 py-2 site-branding h-[25rem]","children":[["$","div",null,{"className":"site-title","children":["$","p",null,{"children":["$","a",null,{"href":"/en","children":"@Mina Influence"}]}]}],["$","div",null,{"className":"site-description","children":["$","p",null,{"children":"Inspire you to have New thinking, Walk out your unique Road."}]}]]}]]}]]}]}]}],["$","div",null,{"className":"grid justify-items-center lg:w-1/2 w-full lg:h-auto lg:py-6 mt-6 lg:mt-0 hidden md:block","children":["$","div",null,{"className":"blog-branding-intro motto-block","children":["$","section",null,{"className":"text-gray-500 body-font","children":["$","div",null,{"className":"container px-6 mx-auto","children":["$","div",null,{"className":"w-full mx-auto text-center","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","fill":"currentColor","className":"inline-block w-6 h-6 text-gray-400 mb-4","viewBox":"0 0 975.036 975.036","children":["$","path",null,{"d":"M925.036 57.197h-304c-27.6 0-50 22.4-50 50v304c0 27.601 22.4 50 50 50h145.5c-1.9 79.601-20.4 143.3-55.4 191.2-27.6 37.8-69.399 69.1-125.3 93.8-25.7 11.3-36.8 41.7-24.8 67.101l36 76c11.6 24.399 40.3 35.1 65.1 24.399 66.2-28.6 122.101-64.8 167.7-108.8 55.601-53.7 93.7-114.3 114.3-181.9 20.601-67.6 30.9-159.8 30.9-276.8v-239c0-27.599-22.401-50-50-50zM106.036 913.497c65.4-28.5 121-64.699 166.9-108.6 56.1-53.7 94.4-114.1 115-181.2 20.6-67.1 30.899-159.6 30.899-277.5v-239c0-27.6-22.399-50-50-50h-304c-27.6 0-50 22.4-50 50v304c0 27.601 22.4 50 50 50h145.5c-1.9 79.601-20.4 143.3-55.4 191.2-27.6 37.8-69.4 69.1-125.3 93.8-25.7 11.3-36.8 41.7-24.8 67.101l35.9 75.8c11.601 24.399 40.501 35.2 65.301 24.399z"}]}],["$","p",null,{"className":"leading-relaxed","children":"Sometimes, you just meet some stories and invoked your inspiration, then later you use a totally different way, different concept to have a different life in the future."}],["$","span",null,{"className":"inline-block h-1 w-10 rounded bg-pink-500 mt-8 mb-6"}],["$","h2",null,{"className":"text-gray-900 font-medium title-font tracking-wider text-lg","children":"Sign @MinaYu."}]]}]}]}]}]}]]}]}]}],["$","section",null,{"className":"text-gray-600 body-font","children":["$","div",null,{"className":"container py-12 mx-auto","children":["$","div",null,{"className":"flex-wrap","children":["$","div",null,{"className":"p-2","children":["$","div",null,{"className":"mx-auto flex flex-wrap bg-white","children":[["$","div",null,{"className":"lg:w-2/3 w-full lg: h-full object-cover object-center bg-cover","children":["$","div",null,{"className":"px-4 mb-4","children":[["$","div",null,{"className":"mb-10 border border-solid py-4","children":[["$","p",null,{"className":"text-center tracking-widest text-md font-medium post-category font-fondamento","children":"IT Things and Development"}],["$","h3",null,{"className":"text-center tracking-widest text-md font-medium post-category font-fondamento","children":"it-things-and-development"}],["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md font-fondamento px-4 pt-2 pb-2","children":"[Back-end Tech] Research on Amazon Neptune Database and Data Visualization"}],["$","p",null,{"className":"text-center test-gray italic tracking-wider font-mario","children":["Posted on","Dec"," ",16,", ",2022]}]]}],["$","div",null,{"className":"flex-wrap","children":[["$","img",null,{"className":"h-full w-full object-cover object-center mb-6 border border-solid","src":"https://mingjungyu.files.wordpress.com/2022/12/screenshot-2022-12-16-at-8.56.44-pm.png","alt":"Graph Database"}],["$","article",null,{"className":"prose prose-slate prose-lg max-w-none break-words whitespace-pre-wrap","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$9"}}]}]]}]]}]}],["$","div",null,{"className":"lg:w-1/3 w-full lg:h-auto lg: mt-6 lg:mt-0","children":["$","div",null,{"className":"px-4","children":[["$","div",null,{"children":[["$","div",null,{"className":"mb-10 border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"ABOUT ME"}]}],["$","div",null,{"className":"flex items-center justify-center","children":["$","img",null,{"className":"object-cover rounded-full","width":"175","height":"175","src":"/static/img/logo.jpg","alt":"Author Profile"}]}],["$","p",null,{"className":"leading-relaxed text-md text-center pt-3 pb-3 px-2 motto-block","children":"Hi, this is Mina, an ENTP type person always with innovative ideas. Cheerful, lively, also romantic. A software engineer, blogger, love to explore different cultures and build entrepreneurship. "}],["$","p",null,{"className":"leading-relaxed text-2xl text-center pt-1 pb-4 motto-block","children":"@MinaYu Signed"}],["$","div",null,{"className":"border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"BLOG STATS"}]}],["$","div",null,{"className":"my-5 pl-5 font-bold font-voll","children":[["$","span",null,{"id":"busuanzi_container_site_pv","children":["$","p",null,{"className":"pb-2","children":["Visits: ",["$","span",null,{"id":"busuanzi_value_site_pv"}]]}]}],["$","span",null,{"id":"busuanzi_container_site_uv","children":["$","p",null,{"children":["Visitors: ",["$","span",null,{"id":"busuanzi_value_site_uv"}]]}]}]]}]]}],["$","div",null,{"className":"mb-5 border border-solid py-4","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"CATEGORY"}]}],[["$","div","it-things-and-development",{"children":[["$","a",null,{"href":"/en/categories/it-things-and-development/","className":"blog-link-style","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["IT Things and Development"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",10,")"]}]]}]}],["$","div",null,{"className":"list-disc list-inside ml-4 text-gray-600","children":[["$","a","research-and-learning",{"className":"link-unstyled","href":"/en/categories/research-and-learning/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Research and Learning Note"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",6,")"]}]]}]}],["$","a","architecture-design-and-solution",{"className":"link-unstyled","href":"/en/categories/architecture-design-and-solution/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Architectural Design and Innovative Solutions"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",1,")"]}]]}]}],["$","a","miri",{"className":"link-unstyled","href":"/en/categories/miri/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Miri Robot Fortune Teller - Making Product Is Not Easy!"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",3,")"]}]]}]}]]}]]}],["$","div","espanol-posts",{"children":[["$","a",null,{"href":"/en/categories/espanol-posts/","className":"blog-link-style","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Español Posts"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",2,")"]}]]}]}],["$","div",null,{"className":"list-disc list-inside ml-4 text-gray-600","children":[["$","a","somos-familia",{"className":"link-unstyled","href":"/en/categories/somos-familia/","children":["$","div",null,{"className":"py-3 text-sm border-b border-solid font-fondamento","children":["Novel - Somos familia"," ",["$","span",null,{"className":"font-color-gold-1","children":["(",2,")"]}]]}]}]]}]]}]],["$","div",null,{"className":"mb-10 border border-solid py-4 mt-10","children":["$","p",null,{"className":"font-bold text-center text-gray grid-subtitle text-md","children":"GALLERY"}]}]]}]}]]}]}]}]}]}],["$","footer",null,{"children":[["$","div",null,{"className":"bg-white border-t border-solid","children":["$","div",null,{"className":"container px-5 mx-auto","children":["$","div",null,{"className":"xl:w-1/2 lg:w-3/4 w-full mx-auto text-center","children":["$","div",null,{"className":"text-gray-600 text-center text-xl font-hand-writing tracking-wider py-8 px-2","children":"Hi, It's Mina Yu, a software engineer, blogger and polyglot learner. Since 7-9 years ago, my dream is designing my own personal website and now I did it, I changed the website name to @Mina Influence, want to encourage people by my influence. I will continue to achieve more my dream in the future. I just want to tell you, no matter your plan looks how hard and how unachievable, Once you begin to do it, everything will be changed."}]}]}]}],["$","div",null,{"className":"bg-cyan-50 border-t border-solid","children":["$","div",null,{"className":"text-gray-300 text-center text-md motto-block py-8 px-4","children":"Copy Right © 2024 @Mina Influence. Designed by MINA YU. Sign @MinaYu."}]}]]}]]
